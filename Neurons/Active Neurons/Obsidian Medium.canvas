{
	"nodes":[
		{"type":"group","id":"be43437676cb3a9a","x":-360,"y":-1440,"width":7051,"height":6160,"label":"qUEST LOG"},
		{"type":"group","id":"c43e97f4bdba8f0c","x":855,"y":-1413,"width":3886,"height":2242,"label":"Plugin Design"},
		{"type":"group","id":"46129e297e24627f","x":-360,"y":1094,"width":3158,"height":2596,"label":"Wallet"},
		{"type":"group","id":"8fc63b164ded0953","x":2972,"y":934,"width":1964,"height":1695,"label":"Wagmi"},
		{"type":"group","id":"1acab4fdde94c930","x":-360,"y":2803,"width":1424,"height":1917,"label":"Outputs"},
		{"type":"group","id":"5de87f2f035ec147","x":4936,"y":-1133,"width":1605,"height":1740,"label":"EsConfigstuff"},
		{"id":"a554ebd0a675278f","x":2320,"y":5206,"width":1040,"height":979,"type":"file","file":"Neurons/Active Neurons/steps to success.md"},
		{"type":"text","text":"update this tsconfig to use newer target i need es2020 or higher","id":"c5caaf4a30c3d51f","x":5514,"y":-1010,"width":140,"height":163},
		{"chat_role":"assistant","type":"text","text":"```json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"inlineSourceMap\": true,\n    \"inlineSources\": true,\n    \"module\": \"ESNext\",\n    \"target\": \"ES2020\",\n    \"allowJs\": true,\n    \"noImplicitAny\": true,\n    \"moduleResolution\": \"node\",\n    \"importHelpers\": true,\n    \"isolatedModules\": true,\n    \"strictNullChecks\": true,\n    \"lib\": [\n      \"DOM\",\n      \"ES2015\",\n      \"ES2016\",\n      \"ES2017\",\n      \"ES2018\",\n      \"ES2019\",\n      \"ES2020\"\n    ]\n  },\n  \"include\": [\n    \"**/*.ts\"\n  ]\n}\n```\n\nIn the provided `tsconfig.json` file, the `target` option specifies the ECMAScript version that the TypeScript compiler should target. To update the configuration to use ES2020 or a higher version, you can replace the existing value of `\"ES6\"` with `\"ES2020\"`.\n\nAdditionally, you can update the `\"lib\"` option to include the libraries for each ECMAScript version from ES2015 to ES2020. This ensures that the necessary typings are available for the specific version you are targeting.\n\nNote: The `\"lib\"` option specifies the default library files to include when type-checking and compiling your TypeScript code.","id":"25c76c2419e41598","x":5708,"y":-1010,"width":212,"height":368,"color":"6"},
		{"chat_role":"assistant","type":"text","text":"I apologize for the error. It seems that updating the `\"target\"` option to `\"ES2020\"` alone may not be sufficient to enable the use of big integer literals.\n\nTo use big integer literals, you also need to enable the `\"bigint\"` feature. Modify your `tsconfig.json` file as follows:\n\n```json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"inlineSourceMap\": true,\n    \"inlineSources\": true,\n    \"module\": \"ESNext\",\n    \"target\": \"ES2020\",\n    \"allowJs\": true,\n    \"noImplicitAny\": true,\n    \"moduleResolution\": \"node\",\n    \"importHelpers\": true,\n    \"isolatedModules\": true,\n    \"strictNullChecks\": true,\n    \"lib\": [\n      \"DOM\",\n      \"ES2015\",\n      \"ES2016\",\n      \"ES2017\",\n      \"ES2018\",\n      \"ES2019\",\n      \"ES2020\"\n    ],\n    \"downlevelIteration\": true,\n    \"jsx\": \"react\",\n    \"resolveJsonModule\": true\n  },\n  \"include\": [\n    \"**/*.ts\"\n  ]\n}\n```\n\nPlease note that if your code is using any other features specific to ES2020, you may need to include additional configuration options as necessary.","id":"692db79750c9d67c","x":5920,"y":-544,"width":581,"height":1050,"color":"6"},
		{"type":"text","text":"âœ˜ [ERROR] Big integer literals are not available in the configured target environment (\"es2018\")\n","id":"bb8e3115aad04c65","x":5979,"y":-990,"width":165,"height":329},
		{"type":"text","text":"```json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"inlineSourceMap\": true,\n    \"inlineSources\": true,\n    \"module\": \"ESNext\",\n    \"target\": \"ES6\",\n    \"allowJs\": true,\n    \"noImplicitAny\": true,\n    \"moduleResolution\": \"node\",\n    \"importHelpers\": true,\n    \"isolatedModules\": true,\n\t\"strictNullChecks\": true,\n    \"lib\": [\n      \"DOM\",\n      \"ES5\",\n      \"ES6\",\n      \"ES7\"\n    ]\n  },\n  \"include\": [\n    \"**/*.ts\"\n  ]\n}\n\n```","id":"50c9886120304bef","x":5116,"y":-1107,"width":304,"height":521},
		{"chat_role":"assistant","type":"text","text":"Absolutely! Using ES5, ES6, and ES7 have their own benefits and reasons for usage. Here's a breakdown of why you would want to use each of these versions:\n\n1. ES5 (ECMAScript 5): \n   - Widely supported: ES5 features are supported by all modern browsers and JavaScript engines.\n   - Basic support: It provides fundamental features like variables, functions, loops, conditionals, and objects.\n   - Compatibility: ES5 is backward compatible, meaning code written in older versions of JavaScript will work in ES5.\n\n2. ES6 (ECMAScript 2015):\n   - Enhanced syntax: ES6 introduces new syntax and language enhancements, such as arrow functions, destructuring, promise, spread operator, and classes.\n   - Improved module system: ES6 provides a standardized module system, enabling better code organization and reusability.\n   - Convenience: ES6 simplifies many common programming tasks with features like default function parameters, template literals, and iterators.\n   - Enhanced object-oriented programming: ES6 brings class syntax and inheritance, making it easier to work with objects.\n\n3. ES7 (ECMAScript 2016 and beyond):\n   - Async/await: ES7 introduces async/await, a powerful feature that simplifies working with asynchronous code, making it easier to write and understand.\n   - Array includes method: ES7 adds a convenient method to check if an array contains a specific element.\n   - Other improvements: ES7 also includes additional enhancements, like exponentiation operator (**) and Object.values/Object.entries.\n\nUsing newer versions of ECMAScript allows you to take advantage of the latest language features, improve code readability and maintainability, and increase development productivity. However, it's essential to consider the compatibility requirements of your target platforms to ensure that the code will run correctly.","id":"68ca986cfbd0478d","x":5116,"y":-440,"width":443,"height":605,"color":"6"},
		{"type":"file","file":"Neurons/Active Neurons/esbuild config.md","id":"8cb202e96d50351e","x":5300,"y":271,"width":280,"height":316},
		{"type":"text","text":"is there a reason to use es5 es6 es7? ","id":"f9f6b696f9105a33","x":5399,"y":-440,"width":140,"height":50},
		{"type":"file","file":"Neurons/Active Neurons/Plugin Template Code.md","id":"e338af7db385a768","x":1980,"y":-175,"width":882,"height":670},
		{"type":"file","file":"Neurons/Active Neurons/Obsidian Web3.md","id":"fbcebfc54fe33e8b","x":2992,"y":1169,"width":1080,"height":1440},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/wagmi- React Hooks for Ethereum.md","id":"e2e8296434e0cb42","x":4331,"y":954,"width":383,"height":429},
		{"chat_role":"assistant","type":"text","text":"I apologize for the mistake. It seems that step three is incorrect, and the `new WagmiConfig` line should not be included. The `WagmiConfig` class does not need to be instantiated.\n\nHere is the correct code for step three:\n\n```typescript\nasync onload() {\n  // ...\n  const config = createConfig({\n    autoConnect: true,\n    publicClient: createPublicClient({\n      chain: mainnet,\n      transport: http()\n    }),\n  });\n  WagmiConfig(config); // Remove the \"new\" keyword\n  // ...\n}\n```\n\nBy making this change, you should be able to properly configure the wagmi React Hooks for Ethereum in your Plugin Template Code.","id":"275175ed83633e24","x":4331,"y":1889,"width":526,"height":711,"color":"6"},
		{"type":"text","text":"step three throws an error where new WagmiConfig has an explicit any","id":"ae7685b6d2426e80","x":4206,"y":1550,"width":250,"height":60},
		{"type":"text","text":"oBSIDIAN pLUGIN nOTES\n\n-> dDapps need a wallet: Chorme users have metamask.\n-> Obsidian needs a wallet plugin first.\n-> Once a wallet is available we can create quest log plugin to interact with it \n\n","id":"09407c0a1afa8875","x":782,"y":1141,"width":327,"height":239},
		{"chat_role":"assistant","type":"text","text":"A possible design for a MetaMask plugin in Obsidian could be as follows:\n\n1. Create a new plugin for Obsidian and name it \"MetaMask Integration\".\n2. Import the necessary dependencies for Obsidian and MetaMask SDK.\n3. Define the plugin's default settings, such as the initial network and default account.\n4. Create a class for the plugin that extends the Obsidian Plugin class.\n5. Implement the `onload` function, which is called when the plugin is loaded in Obsidian.\n6. In the `onload` function, initialize the MetaMask SDK by instantiating the MetaMaskSDK class and obtaining the provider object.\n7. Create a function to connect to MetaMask. This function will use the MetaMask SDK's `ethereum.request` method to prompt the user to connect their MetaMask wallet to the plugin.\n8. Implement a function to listen for account changes in MetaMask. This function will use the MetaMask SDK's `ethereum.on` method to listen for the `accountsChanged` event, which is triggered when the user switches their active account in MetaMask.\n9. Create a function to retrieve the current network in MetaMask. This function will use the MetaMask SDK's `ethereum.request` method to call the `eth_chainId` method.\n10. Implement a function to send a transaction using MetaMask. This function will use the MetaMask SDK's `ethereum.request` method to call the `eth_sendTransaction` method.\n11. Add a ribbon icon to the Obsidian interface to represent the MetaMask integration. Clicking on the icon will call the connect function.\n12. Display the current connected account and network in a status bar item at the bottom of the Obsidian app. Update this status bar item whenever the account or network changes.\n13. Add a command to the plugin that allows the user to send a transaction using MetaMask. This command will call the send transaction function.\n14. Implement the `onunload` function, which is called when the plugin is disabled or unloaded. In this function, disconnect from MetaMask and remove any event listeners.\n15. Register the plugin commands, event listeners, and status bar items in the `onload` function.\n16. Add a settings tab to the plugin that allows the user to configure their preferred default network and account.\n17. Implement the `display` function for the settings tab, where the user can change their settings and save them.\n18. Handle any errors or exceptions that may occur during the plugin's execution, such as if MetaMask is not installed or the user denies the connection request.\n19. Implement the necessary utility functions to parse and format data related to transactions and accounts, if needed.\n20. Test the plugin thoroughly and make any necessary adjustments or improvements.\n\nNote: This is just a high-level overview of the design. The actual implementation may require additional consideration and customization based on your specific requirements and the features you want to include in the MetaMask integration for Obsidian.","id":"d630007aaf1cfe97","x":696,"y":1465,"width":531,"height":400,"color":"6"},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/MetamaskSDK React.md","id":"9413021ce72c6128","x":1958,"y":1565,"width":270,"height":478},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Metamask NodeJs.md","id":"89fb8870729a20f4","x":2398,"y":1665,"width":274,"height":339},
		{"type":"text","text":"suggest a plugin design that implements metamask in obsidian.","id":"949b051c548b4106","x":765,"y":2004,"width":394,"height":449},
		{"type":"file","file":"Neurons/Active Neurons/Metamask INtegration.md","id":"8ba2846e4b85b67f","x":1818,"y":2177,"width":820,"height":276},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Compiling and running the Plugin.md","id":"Compiling and running the Plugin.md","x":1681,"y":-1352,"width":443,"height":230},
		{"type":"text","text":"Create a design guide for a web3 plugin on obsidian","id":"ef417c712fe4c7ed","x":3190,"y":349,"width":367,"height":180},
		{"type":"text","text":"summarize the plugin ","id":"577c31d843f6bcda","x":3534,"y":133,"width":207,"height":50},
		{"type":"link","url":"https://docs.obsidian.md/Home","id":"248a585f64390e83","x":3856,"y":-1067,"width":712,"height":967},
		{"type":"file","file":"Neurons/Active Neurons/Plugin Explainer.md","id":"f886725a275f2fab","x":4004,"y":40,"width":632,"height":617},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Recreating Cycle through Panes.md","id":"Recreating Cycle through Panes.md","x":1758,"y":-784,"width":443,"height":230},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Into Obs Plugins.md","id":"Into Obs Plugins.md","x":1120,"y":-565,"width":443,"height":230},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Publishing a Plugin.md","id":"Publishing a Plugin.md","x":1758,"y":-394,"width":443,"height":230},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Getting things set up.md","id":"Getting things set up.md","x":1120,"y":-244,"width":443,"height":230},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/The Sample Plugin.md","id":"The Sample Plugin.md","x":1120,"y":-1393,"width":443,"height":569},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Obsidian Medium.md","id":"Obsidian Medium.md","x":1120,"y":-813,"width":443,"height":230,"color":"1"},
		{"type":"file","file":"Neurons/Active Neurons/Reading List.md","id":"a3f5072b765f909a","x":962,"y":49,"width":687,"height":780},
		{"type":"file","file":"Neurons/Active Neurons/Steps to Reproduce.md","id":"a5d2c8225c64d93c","x":2360,"y":-1393,"width":730,"height":1019},
		{"type":"text","text":"describe the frontend and backend requirements and their architecture within the plugin design","id":"10080eb24ae79f54","x":1440,"y":1914,"width":250,"height":180},
		{"type":"text","text":"Generate the code based on the provided context","id":"4490626620141987","x":2526,"y":2535,"width":224,"height":243},
		{"type":"file","file":"Neurons/Active Neurons/Backend Metamsk.md","id":"f64b34b1cb0b6fc7","x":2250,"y":3064,"width":500,"height":500},
		{"type":"link","url":"https://docs.metamask.io/wallet/how-to/connect/set-up-sdk/javascript/electron/","id":"a6d78a6a549afd81","x":1374,"y":1201,"width":550,"height":464},
		{"type":"file","file":"Neurons/Active Neurons/Metamask React Frontend.md","id":"9de66281f7b411d8","x":-340,"y":3438,"width":1009,"height":1262},
		{"type":"file","file":"Neurons/Active Neurons/React Metamask FE2.md","id":"5e1097f236211ca3","x":-323,"y":2823,"width":1242,"height":1877,"color":"3"},
		{"type":"file","file":"Neurons/Active Neurons/Design Docs FE-BE.md","id":"92576c635a1e3c73","x":1227,"y":2110,"width":500,"height":1102,"color":"1"},
		{"type":"text","text":"create an MVP code plugin to integrate metamask into obsidian","id":"27b89828d52ee53e","x":1947,"y":3952,"width":334,"height":277},
		{"type":"file","file":"Neurons/Active Neurons/Design Docs FE-BE.md","id":"afc7c1b7c503af93","x":1120,"y":3520,"width":500,"height":571,"color":"1"},
		{"type":"file","file":"Neurons/Active Neurons/Frontend Metamask.md","id":"77e457d7fe0240be","x":1520,"y":3064,"width":500,"height":500},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Obsidian React Docs.md","id":"a96fcab7d63cb229","x":2880,"y":3293,"width":540,"height":454},
		{"chat_role":"assistant","type":"text","text":"Sure! Here's an example of an MVP code plugin that integrates MetaMask into Obsidian:\n\n```typescript\nimport { Plugin, App, WorkspaceLeaf, TFile, ButtonComponent } from \"obsidian\";\nimport { MetaMaskSDK } from \"@metamask/sdk\";\n\nexport default class MetaMaskPlugin extends Plugin {\n  walletService: any;\n\n  async onload() {\n    this.addRibbonIcon(\"fa-wallet\", \"MetaMask\", async (evt) => {\n      // Create or open a new pane for interacting with MetaMask\n      const metaMaskPane = this.app.workspace.getLeafByLeafType(\"metamask\");\n      if (!metaMaskPane) {\n        await this.openMetaMaskPane();\n      } else {\n        this.app.workspace.setActiveLeaf(metaMaskPane);\n      }\n    });\n\n    this.registerCodeMirror((cm: CodeMirror.Editor) => {\n      // Add MetaMask integration functionality to the code editor\n      // You can add custom buttons, actions, etc. here\n    });\n\n    // Initialize MetaMask SDK\n    const MMSDK = new MetaMaskSDK(options);\n    const ethereum = MMSDK.getProvider();\n    this.walletService = ethereum;\n\n    // Other plugin initializations ...\n    // Load user data ...\n  }\n\n  async openMetaMaskPane() {\n    const leaf = this.app.workspace.createLeafBySplit(\n      this.app.workspace.activeLeaf,\n      \"vertical\"\n    );\n    leaf.containerEl.className = \"metamask-pane\";\n    leaf.setViewState({\n      type: \"metamask\",\n    });\n    leaf.setElasticLayout();\n    await this.app.workspace.openPinnedLeaf(leaf);\n  }\n\n  onunload() {\n    // Disconnect from MetaMask wallet or cleanups before plugin unload\n  }\n}\n\nexport class MetaMaskView extends WorkspaceLeaf {\n  plugin: MetaMaskPlugin;\n  contentEl: HTMLElement;\n\n  constructor(app: App, leaf: WorkspaceLeaf, plugin: MetaMaskPlugin) {\n    super(app, leaf);\n    this.plugin = plugin;\n    this.contentEl = leaf.containerEl.children[0] as HTMLElement;\n  }\n\n  onOpen() {\n    this.plugin.walletService.request({ method: \"eth_accounts\" })\n      .then((accounts: string[]) => {\n        // Display account information, balance, etc. in the pane\n      })\n      .catch((error: any) => {\n        // Handle error\n      });\n  }\n\n  onClose() {\n    // Clean up any resources\n  }\n}\n```\n\nPlease note that this is a simplified MVP implementation, and you may need to add additional functionality and error handling according to your specific use case.","id":"87b5daa023f3a531","x":1160,"y":4289,"width":807,"height":905,"color":"6"},
		{"type":"file","file":"Neurons/Active Neurons/Output Metamask.md","id":"ac8ae15f04788acd","x":2380,"y":3952,"width":933,"height":953},
		{"type":"text","text":"give me a set of tasks to incrementally reach the desired functionality","id":"60cadc6e8b87751e","x":2712,"y":5086,"width":250,"height":60},
		{"id":"9ca9379f15f29173","x":3050,"y":5287,"width":250,"height":60,"type":"text","text":""}
	],
	"edges":[
		{"id":"Obsidian Medium.md-Into Obs Plugins.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"Into Obs Plugins.md","toSide":"left"},
		{"id":"Into Obs Plugins.md-Into Obs Plugins.md","fromNode":"Into Obs Plugins.md","fromSide":"right","toNode":"Into Obs Plugins.md","toSide":"left"},
		{"id":"Obsidian Medium.md-Getting things set up.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"Getting things set up.md","toSide":"left"},
		{"id":"Obsidian Medium.md-Compiling and running the Plugin.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"Compiling and running the Plugin.md","toSide":"left"},
		{"id":"Obsidian Medium.md-The Sample Plugin.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"The Sample Plugin.md","toSide":"left"},
		{"id":"Obsidian Medium.md-Recreating Cycle through Panes.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"Recreating Cycle through Panes.md","toSide":"left"},
		{"id":"Obsidian Medium.md-Publishing a Plugin.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"Publishing a Plugin.md","toSide":"left"},
		{"id":"80f2f94a6d56a163","fromNode":"The Sample Plugin.md","fromSide":"right","toNode":"e338af7db385a768","toSide":"left"},
		{"id":"641103d15e32da84","fromNode":"e338af7db385a768","fromSide":"right","toNode":"577c31d843f6bcda","toSide":"left"},
		{"id":"5aaa0ea2f2633733","fromNode":"577c31d843f6bcda","fromSide":"bottom","toNode":"f886725a275f2fab","toSide":"top"},
		{"id":"99ec00357d36bb37","fromNode":"f886725a275f2fab","fromSide":"left","toNode":"e2e8296434e0cb42","toSide":"top"},
		{"id":"783c78173187bf6c","fromNode":"e338af7db385a768","fromSide":"bottom","toNode":"ef417c712fe4c7ed","toSide":"top"},
		{"id":"9a13fb3a27b19e97","fromNode":"e2e8296434e0cb42","fromSide":"left","toNode":"ef417c712fe4c7ed","toSide":"top"},
		{"id":"92560995469c7513","fromNode":"ef417c712fe4c7ed","fromSide":"bottom","toNode":"a5d2c8225c64d93c","toSide":"top"},
		{"id":"27c22ed56789ce9b","fromNode":"50c9886120304bef","fromSide":"right","toNode":"c5caaf4a30c3d51f","toSide":"left"},
		{"id":"77b52191077566b1","fromNode":"c5caaf4a30c3d51f","fromSide":"bottom","toNode":"25c76c2419e41598","toSide":"top"},
		{"id":"b2376ba05dfaf4a6","fromNode":"50c9886120304bef","fromSide":"bottom","toNode":"f9f6b696f9105a33","toSide":"top"},
		{"id":"942648263574bec7","fromNode":"f9f6b696f9105a33","fromSide":"bottom","toNode":"68ca986cfbd0478d","toSide":"top"},
		{"id":"d129cfc694e52e54","fromNode":"25c76c2419e41598","fromSide":"right","toNode":"bb8e3115aad04c65","toSide":"top"},
		{"id":"0a86bf68530e7727","fromNode":"bb8e3115aad04c65","fromSide":"bottom","toNode":"692db79750c9d67c","toSide":"top"},
		{"id":"c6602ac363f9ca2b","fromNode":"fbcebfc54fe33e8b","fromSide":"right","toNode":"ae7685b6d2426e80","toSide":"left"},
		{"id":"3b97133c0feffa0f","fromNode":"ae7685b6d2426e80","fromSide":"bottom","toNode":"275175ed83633e24","toSide":"top"},
		{"id":"10c94a719b5f5b5d","fromNode":"89fb8870729a20f4","fromSide":"bottom","toNode":"949b051c548b4106","toSide":"top"},
		{"id":"f307fd251e6136a7","fromNode":"9413021ce72c6128","fromSide":"bottom","toNode":"949b051c548b4106","toSide":"top"},
		{"id":"32173b4d06af7d53","fromNode":"e338af7db385a768","fromSide":"bottom","toNode":"949b051c548b4106","toSide":"top"},
		{"id":"3581832fcd8f88d0","fromNode":"949b051c548b4106","fromSide":"bottom","toNode":"d630007aaf1cfe97","toSide":"top"},
		{"id":"bae7f568ae7d1314","fromNode":"949b051c548b4106","fromSide":"bottom","toNode":"8ba2846e4b85b67f","toSide":"top"},
		{"id":"715e352e4685cb8b","fromNode":"949b051c548b4106","fromSide":"right","toNode":"10080eb24ae79f54","toSide":"left"},
		{"id":"bed6685e91fed267","fromNode":"92576c635a1e3c73","fromSide":"right","toNode":"77e457d7fe0240be","toSide":"left"},
		{"id":"82fe4aa24a560b93","fromNode":"92576c635a1e3c73","fromSide":"right","toNode":"f64b34b1cb0b6fc7","toSide":"left"},
		{"id":"b5b3faf2cd18eda2","fromNode":"10080eb24ae79f54","fromSide":"bottom","toNode":"92576c635a1e3c73","toSide":"top"},
		{"id":"1a36b190457dfc37","fromNode":"77e457d7fe0240be","fromSide":"right","toNode":"4490626620141987","toSide":"left"},
		{"id":"4f951bbc8a21f62d","fromNode":"a96fcab7d63cb229","fromSide":"right","toNode":"4490626620141987","toSide":"top"},
		{"id":"94592322815d430f","fromNode":"9413021ce72c6128","fromSide":"right","toNode":"4490626620141987","toSide":"top"},
		{"id":"9b6fdbd7f394ac9b","fromNode":"4490626620141987","fromSide":"bottom","toNode":"9de66281f7b411d8","toSide":"top"},
		{"id":"b19b095e5e3d8213","fromNode":"4490626620141987","fromSide":"bottom","toNode":"5e1097f236211ca3","toSide":"top"},
		{"id":"a86213395cb1b16f","fromNode":"77e457d7fe0240be","fromSide":"bottom","toNode":"27b89828d52ee53e","toSide":"top"},
		{"id":"87fb5cd5ad436657","fromNode":"afc7c1b7c503af93","fromSide":"bottom","toNode":"27b89828d52ee53e","toSide":"top"},
		{"id":"07e2b032c16a370b","fromNode":"a96fcab7d63cb229","fromSide":"left","toNode":"27b89828d52ee53e","toSide":"top"},
		{"id":"f80b35e01df52807","fromNode":"27b89828d52ee53e","fromSide":"bottom","toNode":"87b5daa023f3a531","toSide":"top"},
		{"id":"b5e377b6a5b90902","fromNode":"27b89828d52ee53e","fromSide":"bottom","toNode":"ac8ae15f04788acd","toSide":"top"},
		{"id":"298730c2043a17c7","fromNode":"ac8ae15f04788acd","fromSide":"right","toNode":"be43437676cb3a9a","toSide":"bottom"},
		{"id":"b4cf37debadd9a82","fromNode":"ac8ae15f04788acd","fromSide":"bottom","toNode":"60cadc6e8b87751e","toSide":"top"},
		{"id":"078304efb95ae249","fromNode":"60cadc6e8b87751e","fromSide":"bottom","toNode":"a554ebd0a675278f","toSide":"top"}
	]
}