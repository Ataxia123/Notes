{
	"nodes":[
		{"id":"be43437676cb3a9a","x":-1900,"y":550,"width":7965,"height":5625,"type":"group","label":"qUEST LOG"},
		{"id":"c43e97f4bdba8f0c","x":-1760,"y":577,"width":5090,"height":3729,"type":"group","label":"Plugin Design"},
		{"id":"5de87f2f035ec147","x":3525,"y":1840,"width":2520,"height":2073,"type":"group","label":"EsConfigstuff"},
		{"id":"46129e297e24627f","x":-640,"y":4409,"width":1920,"height":1766,"type":"group","label":"Wallet"},
		{"id":"8fc63b164ded0953","x":1561,"y":4460,"width":1964,"height":1695,"type":"group","label":"Wagmi"},
		{"chat_role":"assistant","type":"text","text":"I apologize for the mistake. It seems that step three is incorrect, and the `new WagmiConfig` line should not be included. The `WagmiConfig` class does not need to be instantiated.\n\nHere is the correct code for step three:\n\n```typescript\nasync onload() {\n  // ...\n  const config = createConfig({\n    autoConnect: true,\n    publicClient: createPublicClient({\n      chain: mainnet,\n      transport: http()\n    }),\n  });\n  WagmiConfig(config); // Remove the \"new\" keyword\n  // ...\n}\n```\n\nBy making this change, you should be able to properly configure the wagmi React Hooks for Ethereum in your Plugin Template Code.","id":"275175ed83633e24","x":2979,"y":4780,"width":526,"height":711,"color":"6"},
		{"type":"file","file":"wagmi- React Hooks for Ethereum.md","id":"e2e8296434e0cb42","x":2920,"y":4480,"width":383,"height":429},
		{"type":"file","file":"Neurons/Active Neurons/Obsidian Web3.md","id":"fbcebfc54fe33e8b","x":1581,"y":4695,"width":1080,"height":1440},
		{"type":"text","text":"step three throws an error where new WagmiConfig has an explicit any","id":"ae7685b6d2426e80","x":2795,"y":5076,"width":250,"height":60},
		{"type":"text","text":"update this tsconfig to use newer target i need es2020 or higher","id":"c5caaf4a30c3d51f","x":4258,"y":1976,"width":250,"height":196},
		{"chat_role":"assistant","type":"text","text":"```json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"inlineSourceMap\": true,\n    \"inlineSources\": true,\n    \"module\": \"ESNext\",\n    \"target\": \"ES2020\",\n    \"allowJs\": true,\n    \"noImplicitAny\": true,\n    \"moduleResolution\": \"node\",\n    \"importHelpers\": true,\n    \"isolatedModules\": true,\n    \"strictNullChecks\": true,\n    \"lib\": [\n      \"DOM\",\n      \"ES2015\",\n      \"ES2016\",\n      \"ES2017\",\n      \"ES2018\",\n      \"ES2019\",\n      \"ES2020\"\n    ]\n  },\n  \"include\": [\n    \"**/*.ts\"\n  ]\n}\n```\n\nIn the provided `tsconfig.json` file, the `target` option specifies the ECMAScript version that the TypeScript compiler should target. To update the configuration to use ES2020 or a higher version, you can replace the existing value of `\"ES6\"` with `\"ES2020\"`.\n\nAdditionally, you can update the `\"lib\"` option to include the libraries for each ECMAScript version from ES2015 to ES2020. This ensures that the necessary typings are available for the specific version you are targeting.\n\nNote: The `\"lib\"` option specifies the default library files to include when type-checking and compiling your TypeScript code.","id":"25c76c2419e41598","x":4605,"y":1976,"width":380,"height":442,"color":"6"},
		{"chat_role":"assistant","type":"text","text":"I apologize for the error. It seems that updating the `\"target\"` option to `\"ES2020\"` alone may not be sufficient to enable the use of big integer literals.\n\nTo use big integer literals, you also need to enable the `\"bigint\"` feature. Modify your `tsconfig.json` file as follows:\n\n```json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"inlineSourceMap\": true,\n    \"inlineSources\": true,\n    \"module\": \"ESNext\",\n    \"target\": \"ES2020\",\n    \"allowJs\": true,\n    \"noImplicitAny\": true,\n    \"moduleResolution\": \"node\",\n    \"importHelpers\": true,\n    \"isolatedModules\": true,\n    \"strictNullChecks\": true,\n    \"lib\": [\n      \"DOM\",\n      \"ES2015\",\n      \"ES2016\",\n      \"ES2017\",\n      \"ES2018\",\n      \"ES2019\",\n      \"ES2020\"\n    ],\n    \"downlevelIteration\": true,\n    \"jsx\": \"react\",\n    \"resolveJsonModule\": true\n  },\n  \"include\": [\n    \"**/*.ts\"\n  ]\n}\n```\n\nPlease note that if your code is using any other features specific to ES2020, you may need to include additional configuration options as necessary.","id":"692db79750c9d67c","x":4985,"y":2536,"width":1040,"height":1260,"color":"6"},
		{"type":"text","text":"âœ˜ [ERROR] Big integer literals are not available in the configured target environment (\"es2018\")\n","id":"bb8e3115aad04c65","x":5091,"y":2000,"width":296,"height":395},
		{"type":"text","text":"```json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"inlineSourceMap\": true,\n    \"inlineSources\": true,\n    \"module\": \"ESNext\",\n    \"target\": \"ES6\",\n    \"allowJs\": true,\n    \"noImplicitAny\": true,\n    \"moduleResolution\": \"node\",\n    \"importHelpers\": true,\n    \"isolatedModules\": true,\n\t\"strictNullChecks\": true,\n    \"lib\": [\n      \"DOM\",\n      \"ES5\",\n      \"ES6\",\n      \"ES7\"\n    ]\n  },\n  \"include\": [\n    \"**/*.ts\"\n  ]\n}\n\n```","id":"50c9886120304bef","x":3545,"y":1860,"width":544,"height":625},
		{"chat_role":"assistant","type":"text","text":"Absolutely! Using ES5, ES6, and ES7 have their own benefits and reasons for usage. Here's a breakdown of why you would want to use each of these versions:\n\n1. ES5 (ECMAScript 5): \n   - Widely supported: ES5 features are supported by all modern browsers and JavaScript engines.\n   - Basic support: It provides fundamental features like variables, functions, loops, conditionals, and objects.\n   - Compatibility: ES5 is backward compatible, meaning code written in older versions of JavaScript will work in ES5.\n\n2. ES6 (ECMAScript 2015):\n   - Enhanced syntax: ES6 introduces new syntax and language enhancements, such as arrow functions, destructuring, promise, spread operator, and classes.\n   - Improved module system: ES6 provides a standardized module system, enabling better code organization and reusability.\n   - Convenience: ES6 simplifies many common programming tasks with features like default function parameters, template literals, and iterators.\n   - Enhanced object-oriented programming: ES6 brings class syntax and inheritance, making it easier to work with objects.\n\n3. ES7 (ECMAScript 2016 and beyond):\n   - Async/await: ES7 introduces async/await, a powerful feature that simplifies working with asynchronous code, making it easier to write and understand.\n   - Array includes method: ES7 adds a convenient method to check if an array contains a specific element.\n   - Other improvements: ES7 also includes additional enhancements, like exponentiation operator (**) and Object.values/Object.entries.\n\nUsing newer versions of ECMAScript allows you to take advantage of the latest language features, improve code readability and maintainability, and increase development productivity. However, it's essential to consider the compatibility requirements of your target platforms to ensure that the code will run correctly.","id":"68ca986cfbd0478d","x":3545,"y":2660,"width":793,"height":726,"color":"6"},
		{"type":"text","text":"is there a reason to use es5 es6 es7? ","id":"f9f6b696f9105a33","x":4052,"y":2660,"width":250,"height":60},
		{"type":"file","file":"Neurons/Active Neurons/esbuild config.md","id":"8cb202e96d50351e","x":3875,"y":3514,"width":501,"height":379},
		{"id":"a3f5072b765f909a","x":3840,"y":5000,"width":1240,"height":780,"type":"file","file":"Neurons/Active Neurons/Reading List.md"},
		{"type":"text","text":"Create a design guide for a web3 plugin on obsidian","id":"ef417c712fe4c7ed","x":1479,"y":2636,"width":443,"height":216},
		{"type":"text","text":"summarize the plugin ","id":"577c31d843f6bcda","x":1894,"y":2377,"width":250,"height":60},
		{"id":"248a585f64390e83","x":2283,"y":937,"width":860,"height":1160,"type":"link","url":"https://docs.obsidian.md/Home"},
		{"type":"file","file":"Neurons/Active Neurons/Plugin Explainer.md","id":"f886725a275f2fab","x":2462,"y":2266,"width":763,"height":740},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Getting things set up.md","id":"Getting things set up.md","x":-1600,"y":3100,"width":980,"height":500},
		{"type":"file","file":"Neurons/Active Neurons/Plugin Template Code.md","id":"e338af7db385a768","x":1040,"y":847,"width":882,"height":1480},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Into Obs Plugins.md","id":"Into Obs Plugins.md","x":-1600,"y":2401,"width":980,"height":500},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/The Sample Plugin.md","id":"The Sample Plugin.md","x":-1600,"y":597,"width":980,"height":1240},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Obsidian Medium.md","id":"Obsidian Medium.md","x":-1600,"y":1860,"width":980,"height":500,"color":"1"},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Compiling and running the Plugin.md","id":"Compiling and running the Plugin.md","x":-375,"y":1017,"width":980,"height":500},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Recreating Cycle through Panes.md","id":"Recreating Cycle through Panes.md","x":-190,"y":1923,"width":980,"height":500},
		{"type":"file","file":"Study Questions/Philosophy/Data_Science/Obsidian_Plugins/Publishing a Plugin.md","id":"Publishing a Plugin.md","x":-190,"y":2773,"width":980,"height":500},
		{"type":"file","file":"Neurons/Active Neurons/Steps to Reproduce.md","id":"a5d2c8225c64d93c","x":1041,"y":2963,"width":881,"height":1223},
		{"id":"a6d78a6a549afd81","x":160,"y":4755,"width":1100,"height":1400,"type":"link","url":"https://docs.metamask.io/wallet/how-to/connect/set-up-sdk/javascript/electron/"},
		{"id":"09407c0a1afa8875","x":-455,"y":4500,"width":327,"height":239,"type":"text","text":"oBSIDIAN pLUGIN nOTES\n\n-> dDapps need a wallet: Chorme users have metamask.\n-> Obsidian needs a wallet plugin first.\n-> Once a wallet is available we can create quest log plugin to interact with it \n\n"}
	],
	"edges":[
		{"id":"Obsidian Medium.md-Into Obs Plugins.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"Into Obs Plugins.md","toSide":"left"},
		{"id":"Into Obs Plugins.md-Into Obs Plugins.md","fromNode":"Into Obs Plugins.md","fromSide":"right","toNode":"Into Obs Plugins.md","toSide":"left"},
		{"id":"Obsidian Medium.md-Getting things set up.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"Getting things set up.md","toSide":"left"},
		{"id":"Obsidian Medium.md-Compiling and running the Plugin.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"Compiling and running the Plugin.md","toSide":"left"},
		{"id":"Obsidian Medium.md-The Sample Plugin.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"The Sample Plugin.md","toSide":"left"},
		{"id":"Obsidian Medium.md-Recreating Cycle through Panes.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"Recreating Cycle through Panes.md","toSide":"left"},
		{"id":"Obsidian Medium.md-Publishing a Plugin.md","fromNode":"Obsidian Medium.md","fromSide":"right","toNode":"Publishing a Plugin.md","toSide":"left"},
		{"id":"80f2f94a6d56a163","fromNode":"The Sample Plugin.md","fromSide":"right","toNode":"e338af7db385a768","toSide":"left"},
		{"id":"641103d15e32da84","fromNode":"e338af7db385a768","fromSide":"right","toNode":"577c31d843f6bcda","toSide":"left"},
		{"id":"5aaa0ea2f2633733","fromNode":"577c31d843f6bcda","fromSide":"bottom","toNode":"f886725a275f2fab","toSide":"top"},
		{"id":"99ec00357d36bb37","fromNode":"f886725a275f2fab","fromSide":"left","toNode":"e2e8296434e0cb42","toSide":"top"},
		{"id":"783c78173187bf6c","fromNode":"e338af7db385a768","fromSide":"bottom","toNode":"ef417c712fe4c7ed","toSide":"top"},
		{"id":"9a13fb3a27b19e97","fromNode":"e2e8296434e0cb42","fromSide":"left","toNode":"ef417c712fe4c7ed","toSide":"top"},
		{"id":"92560995469c7513","fromNode":"ef417c712fe4c7ed","fromSide":"bottom","toNode":"a5d2c8225c64d93c","toSide":"top"},
		{"id":"27c22ed56789ce9b","fromNode":"50c9886120304bef","fromSide":"right","toNode":"c5caaf4a30c3d51f","toSide":"left"},
		{"id":"77b52191077566b1","fromNode":"c5caaf4a30c3d51f","fromSide":"bottom","toNode":"25c76c2419e41598","toSide":"top"},
		{"id":"b2376ba05dfaf4a6","fromNode":"50c9886120304bef","fromSide":"bottom","toNode":"f9f6b696f9105a33","toSide":"top"},
		{"id":"942648263574bec7","fromNode":"f9f6b696f9105a33","fromSide":"bottom","toNode":"68ca986cfbd0478d","toSide":"top"},
		{"id":"d129cfc694e52e54","fromNode":"25c76c2419e41598","fromSide":"right","toNode":"bb8e3115aad04c65","toSide":"top"},
		{"id":"0a86bf68530e7727","fromNode":"bb8e3115aad04c65","fromSide":"bottom","toNode":"692db79750c9d67c","toSide":"top"},
		{"id":"c6602ac363f9ca2b","fromNode":"fbcebfc54fe33e8b","fromSide":"right","toNode":"ae7685b6d2426e80","toSide":"left"},
		{"id":"3b97133c0feffa0f","fromNode":"ae7685b6d2426e80","fromSide":"bottom","toNode":"275175ed83633e24","toSide":"top"}
	]
}