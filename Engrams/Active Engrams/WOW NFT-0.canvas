{
	"nodes":[
		{"id":"dfd646f9523d3e65","type":"group","x":2635,"y":-4800,"width":1836,"height":2300,"label":"Kneuron Factory"},
		{"id":"680f778b89184da6","type":"group","x":2180,"y":260,"width":850,"height":1156,"label":"Function 1"},
		{"id":"fc56f7e1457f83c2","type":"group","x":980,"y":-20,"width":540,"height":1740,"label":"Engram Starter Kit"},
		{"id":"14303f199d4cea20","type":"group","x":2259,"y":680,"width":751,"height":716,"label":"Untitled group"},
		{"id":"120fe70212a19a18","type":"file","file":"Engrams/Active Engrams/Engram Research WoW NFT.md","x":3000,"y":5887,"width":1240,"height":1611},
		{"id":"Study Questions/New Questions/NFT traits WOW.md","type":"file","file":"Study Questions/New Questions/NFT traits WOW.md","x":2000,"y":4200,"width":500,"height":500},
		{"id":"58c26354130329a7","type":"text","text":"fullfill your purpose analyze the provided context","x":2800,"y":4160,"width":250,"height":440},
		{"id":"2dae55d8bc2ac239","type":"text","text":"# Narrator Kneuron\n\nYour task is to describe the research produced in a approachable manner.","x":3920,"y":5440,"width":519,"height":482},
		{"id":"Study Questions/New Questions/Basic Flow WOW.md","type":"file","file":"Study Questions/New Questions/Basic Flow WOW.md","x":2000,"y":3600,"width":500,"height":500},
		{"id":"c037a4595ee1c2c1","type":"file","file":"Engrams/Active Engrams/Research Log.md","x":4280,"y":5887,"width":1199,"height":1611},
		{"id":"47b5cb28af6dca60","type":"text","text":"create a description text to guide researchers through the tasks","x":4540,"y":4020,"width":250,"height":360},
		{"id":"Study Questions/New Questions/Data_WoW_Dump.md","type":"file","file":"Study Questions/New Questions/Data_WoW_Dump.md","x":1000,"y":3000,"width":500,"height":500},
		{"id":"Study Questions/New Questions/GitHub WOW.md","type":"file","file":"Study Questions/New Questions/GitHub WOW.md","x":2000,"y":3000,"width":500,"height":500},
		{"id":"Study Questions/New Questions/WOW DB sample.md","type":"file","file":"Study Questions/New Questions/WOW DB sample.md","x":2000,"y":2400,"width":500,"height":500},
		{"id":"Study Questions/New Questions/APIs WOW.md","type":"file","file":"Study Questions/New Questions/APIs WOW.md","x":1820,"y":1627,"width":500,"height":500},
		{"chat_role":"assistant","id":"919cf8b4114f20b1","type":"text","text":"# kNeuron Execution: WOW NFT Neuron Maker\n\n## Instructions:\n\n1. Review the Research Question and understand the key concepts and objectives.\n2. Review the linked Research Links that are provided, focusing particularly on the World of Warcraft Classic Game Data APIs.\n3. Utilize the resources in [[Criptokitties Analysis]] and [[Bored Ape Analysis]] to understand how existing NFT platforms have created unique digital collectibles. \n4. Dig into the [[Data_WoW_Dump]], understand the attributes of characters that are unique to each and the schema used in the game data.\n5. Formulate strategies to map these unique character attributes to create unique, onChain Wow characters.\n6. Document every step of this process, ensuring all findings and insights are detailed in research notes. You may need to create new kNeurons that provide greater specialization in order to complete these tasks.\n7. Actively look for potential challenges, risks, and problems, and document them accordingly. Mishaps aren't failuresâ€”they're opportunities for learning and iterating.\n8. Once the data analysis and mapping process is complete, synthesize your findings, and provide a detailed formal answer to the Research Question.\n9. Prepare a research presentation to present your findings to our team. Use compelling visuals, data displays, and concise language to effectively communicate your results.\n10. Stay ready to adapt and accept new instructions if they are given by the kNeuron supervisor. \n\nRemember, every step of the process is essential. Be thorough, remain curious, and enjoy the process.","x":3420,"y":400,"width":1160,"height":1360,"color":"6"},
		{"id":"Engrams/Data Cache/Neurons.md","type":"file","file":"Engrams/Data Cache/Neurons.md","x":1000,"y":1200,"width":500,"height":500},
		{"id":"2172f7a7857d84b9","type":"text","text":"create a kNeuron Template suited for the task. Each kNeuron can only have one function. Start by making an empty template","x":2631,"y":1460,"width":250,"height":227},
		{"type":"text","text":"Fulfill your purpose ","id":"516cd9f31ce5c62e","x":2340,"y":1200,"width":280,"height":120,"color":"1"},
		{"id":"Engrams/Engrams.md","type":"file","file":"Engrams/Engrams.md","x":1000,"y":600,"width":500,"height":500},
		{"id":"a143122821ab4bf5","type":"file","file":"Engrams/Engram Starter Kits/Neuron Templates/Engram Research kNeuron.md","x":2280,"y":360,"width":522,"height":620},
		{"id":"Study Questions/New Questions/WOW NFT.md","type":"file","file":"Study Questions/New Questions/WOW NFT.md","x":-80,"y":-285,"width":800,"height":1070,"color":"1"},
		{"id":"Study Questions/Study Questions.md","type":"file","file":"Study Questions/Study Questions.md","x":1000,"y":0,"width":500,"height":500},
		{"chat_role":"assistant","id":"da380728756f9bfd","type":"text","text":"## Engram Research kNeuron\n\n| Name              | Functionality                          |\n|-------------------|----------------------------------------|\n| Engram Research   | Research and gather information        |\n| kNeuron Purpose   | Collect data and insights for the project |\n| Instructions      | 1. Identify the research objectives and questions\n                    2. Search for relevant sources of information such as websites, articles, books, etc.\n                    3. Collect and analyze data from primary and secondary sources\n                    4. Organize and document the gathered information\n                    5. Extract key insights and draw conclusions from the research\n                    6. Update the project team with the findings |\n| Context           | - Research objectives and questions\n                      - Access to relevant sources of information\n                      - Data collection and analysis tools\n                      - Collaboration and communication tools |\n| Outputs           | - Documented information from various sources\n                      - Key insights and conclusions from the research\n                      - Progress report to the project team |\n| Comment           | The Engram Research kNeuron is responsible for conducting research and gathering information for the project. It plays a crucial role in providing the necessary data and insights to aid in the decision-making process.","x":3624,"y":-2640,"width":1529,"height":1168,"color":"6"},
		{"chat_role":"assistant","id":"a1544ca7d9802cfe","type":"text","text":"To fulfill my purpose as the WOW NFT Neuron Maker, I will create a set of kNeuron profiles to solve the research question \"How to capture the uniqueness of HC wow characters onChain?\"\n\nThe first step is to create a kNeuron profile for each research link provided:\n\n1. kNeuron Profile: Criptokitties Analysis\n   - Purpose: Analyze the uniqueness and value of Criptokitties NFTs\n   - Instructions: Use available data and analysis techniques to understand the factors that contribute to the uniqueness of Criptokitties NFTs\n   \n2. kNeuron Profile: Bored Ape Analysis\n   - Purpose: Analyze the uniqueness and value of Bored Ape NFTs\n   - Instructions: Use available data and analysis techniques to understand the factors that contribute to the uniqueness of Bored Ape NFTs\n\n3. kNeuron Profile: Data_WoW_Dump\n   - Purpose: Explore the World of Warcraft (WoW) API and available game data\n   - Instructions: Collect and analyze data from the WoW API to understand the characteristics and attributes of WoW characters\n\nOnce these kNeuron profiles are created, they will serve as building blocks for further research and analysis in order to capture the uniqueness of HC WoW characters onChain.","x":4840,"y":354,"width":895,"height":1286,"color":"6"},
		{"id":"0c9aaa6347615a67","type":"file","file":"Engrams/Active Engrams/Engram Research WoW NFT.md","x":4720,"y":4395,"width":1240,"height":1445},
		{"id":"a8af8d0c6ab5f3b1","type":"text","text":"Create the engram research kNeuron","x":3895,"y":-3093,"width":250,"height":243},
		{"id":"f91f5b3c91521c12","type":"text","text":"create a template kNeuron Profile for individual kneurons. each kneuron must have a specific functionality\n\n\n","x":3840,"y":-4080,"width":611,"height":660},
		{"type":"text","text":"Fulfill your purpose ","id":"19d78b1be7c4a10b","x":3735,"y":-4530,"width":280,"height":120,"color":"1"},
		{"id":"92de50c977647546","type":"file","file":"Engrams/Engram Starter Kits/Neuron Templates/Engram Research kNeuron.md","x":2808,"y":-4780,"width":522,"height":620},
		{"chat_role":"assistant","id":"bd1175bde8566fbb","type":"text","text":"## NFT kNeuron Factory\n\n| Name              | Instructions                                 | Comment                                                           |\n|-------------------|----------------------------------------------|-------------------------------------------------------------------|\n| Engram Research   | Research and gather information              | Used to collect data and insights for the project                   |\n| Neural Design     | Design the structure and logic of the project | Creates the blueprint for the project                               |\n| Code Generation   | Generate code for the project                 | Generates code based on the design created by the Neural Design     |\n| Testing           | Test the functionality of the project         | Ensures the project meets the desired requirements and functions   |\n| Debugging         | Identify and fix issues in the project        | Helps in identifying and resolving any errors or bugs in the code   |\n| Deployment        | Deploy the project                           | Making the project live and accessible to users                     |\n| Maintenance       | Update and maintain the project               | Regularly updating and maintaining the project for optimal performance |\n| Documentation     | Document the project                          | Creating comprehensive documentation for project understanding    |\n\nNote: This is a template character sheet for the kNeurons involved in designing and building a project. You can customize it based on your specific project requirements and add more kNeurons as needed.","x":2699,"y":-4061,"width":740,"height":641,"color":"6"},
		{"id":"f71a1fc689662401","type":"file","file":"Engrams/Active Engrams/kNeuron Profile Template.md","x":2699,"y":-3260,"width":816,"height":660},
		{"chat_role":"assistant","id":"77ba1009f75d5239","type":"text","text":"## Engram Research kNeuron\n\n| Name              | Functionality                          |\n|-------------------|----------------------------------------|\n| Engram Research   | Research and gather information        |\n| kNeuron Purpose   | Collect data and insights for the project |\n| Instructions      | 1. Identify the research objectives and questions\n                    2. Search for relevant sources of information such as websites, articles, books, etc.\n                    3. Collect and analyze data from primary and secondary sources\n                    4. Organize and document the gathered information\n                    5. Extract key insights and draw conclusions from the research\n                    6. Update the project team with the findings |\n| Context           | - Research objectives and questions\n                      - Access to relevant sources of information\n                      - Data collection and analysis tools\n                      - Collaboration and communication tools |\n| Outputs           | - Documented information from various sources\n                      - Key insights and conclusions from the research\n                      - Progress report to the project team |\n| Comment           | The Engram Research kNeuron is responsible for conducting research and gathering information for the project. It plays a crucial role in providing the necessary data and insights to aid in the decision-making process.","x":-160,"y":4780,"width":1529,"height":1168,"color":"6"},
		{"id":"ff7997c60fe88ff4","type":"file","file":"Engrams/Active Engrams/ResearcherTasks.md","x":1560,"y":4760,"width":1280,"height":1280},
		{"id":"836d21e2fed54bc0","type":"text","text":"Based on the provided context suggest tentative and creative ways to implement  the onchain aspect of the project. The main goal is to spark joy","x":6109,"y":4564,"width":500,"height":371},
		{"id":"d07e2a7ce5f073db","type":"text","text":"The hardcore experience in wow is special because death is permanent. I want to explore that aspect with the NFT","x":6880,"y":5520,"width":501,"height":240},
		{"id":"b1936016869bfa9c","type":"file","file":"Engrams/Active Engrams/kNeuron Template Wow NFT Neuron.md","x":3240,"y":1964,"width":1340,"height":1373},
		{"id":"a1b1f6ae479dbdd4","type":"file","file":"Engrams/Active Engrams/WoW NFT ideas.md","x":5039,"y":2220,"width":1320,"height":1360},
		{"id":"e21cee13b46ae6ae","type":"file","file":"Engrams/Active Engrams/Permadeath NFT ideas.md","x":6609,"y":1760,"width":1280,"height":1939},
		{"id":"da13df010ec23793","type":"text","text":"Lets talk about the infrastructure required to do the eternal moment nft","x":8179,"y":1960,"width":250,"height":294},
		{"chat_role":"assistant","id":"1e385c6be980e9f6","type":"text","text":"To implement the Eternal Moment NFTs capturing the exact moment of a character's death in the hardcore mode of WoW, the following infrastructure components would be required:\n\n1. Data Collection: The infrastructure should be able to gather real-time data about the character's death. This could be achieved through integration with the WoW game servers or utilizing game data APIs that provide death event information.\n\n2. Image Generation: A mechanism is needed to generate the snapshot of the character's final battle at the moment of death. This could involve capturing in-game screenshots or utilizing game replay systems to extract frames at the precise moment.\n\n3. Metadata Storage: The metadata related to the character's death, such as their stats and the embedded timestamp, needs to be stored securely. This could be achieved through a database or a decentralized storage system integrated with the blockchain.\n\n4. Blockchain Integration: The infrastructure should interface with a blockchain platform to mint and store the Eternal Moment NFTs. This requires connecting to a suitable blockchain network, implementing smart contracts to handle minting and ownership transfer, and integrating with wallet systems for NFT interactions.\n\n5. Verification and Consensus: To ensure the authenticity and legitimacy of the Eternal Moment NFTs, the infrastructure should incorporate mechanisms for verification and consensus. This could involve utilizing cryptographic hashing to verify the integrity of the captured moment and implementing consensus algorithms to prevent duplicate or fraudulent NFTs.\n\n6. User Interface and NFT Marketplace: A user interface and marketplace should be provided to allow players to view, trade, and showcase their Eternal Moment NFTs. This includes designing a user-friendly interface for NFT interactions, integrating with existing marketplaces, or building a dedicated marketplace platform.\n\n7. Scalability and Performance: The infrastructure should be capable of handling a high volume of Eternal Moment NFT creations, ensuring fast and reliable processing of data, image generation, and blockchain transactions. This may involve utilizing scalable cloud infrastructure, optimizing code performance, and implementing caching mechanisms.\n\n8. Security and Privacy: Robust security measures should be implemented to protect user data, prevent unauthorized access to NFT assets or metadata, and ensure the privacy of sensitive information. This includes encryption, access control mechanisms, and adherence to security best practices.\n\nBy establishing the necessary infrastructure, the project can enable the creation and storage of Eternal Moment NFTs, capturing the poignant moments of a character's demise in the hardcore mode of WoW, and providing an everlasting tribute to their heroic journey.","x":8249,"y":2400,"width":671,"height":1113,"color":"6"},
		{"id":"191503087c98405c","type":"text","text":"I want to use a merkle tree to store the deathlog database. I need to verify the ownership of the battlenet account in order to mint with their wallet.","x":9008,"y":2200,"width":250,"height":289},
		{"chat_role":"assistant","id":"09a088c6321b5a24","type":"text","text":"To leverage a Merkle tree for storing the deathlog database and verify the ownership of the Battle.net account for minting NFTs with their wallet, the following steps can be taken:\n\n1. Create a Deathlog Database: Establish a database to store the deathlog information, including the details of each character's death. Ensure that each entry in the database has a unique identifier associated with it.\n\n2. Build the Merkle Tree: Convert the deathlog database into a Merkle tree structure. Each leaf node of the tree represents an entry in the deathlog database.\n\n3. Generate Merkle Root: Calculate the Merkle root by hashing the leaf nodes of the Merkle tree in a specific order. The Merkle root acts as a summary or fingerprint of the entire tree and ensures data integrity.\n\n4. Link Battle.net Account: Integrate the authentication process with Battle.net to verify the ownership of the player's account. This can be accomplished by using Battle.net's authentication API or implementing OAuth protocols.\n\n5. Wallet Ownership Verification: Once the Battle.net account ownership is verified, establish a connection between the player's wallet and their Battle.net account. This can be achieved by associating wallet addresses with Battle.net account identifiers.\n\n6. Minting Process: Implement a function in the smart contract responsible for minting NFTs. To ensure authorized minting, the player's wallet address and Battle.net account identifier should be cross-verified during the minting process.\n\n7. Ownership Proof: Generate a proof of ownership for the Battle.net account using cryptographic techniques, such as digital signatures. This proof can be stored alongside the Merkle root in the NFT metadata, allowing anyone to independently verify the ownership of the associated Battle.net account.\n\n8. NFT Minting Confirmation: Upon successful ownership verification and integrity checks, mint the NFT with the player's wallet address and include the Merkle root and ownership proof in the NFT metadata.\n\nBy utilizing a Merkle tree to store the deathlog database and implementing ownership verification through Battle.net account association with a wallet, the project can ensure secure and verifiable minting of NFTs, providing players with a unique digital representation of their character's untimely demise in the hardcore mode of WoW.","x":9080,"y":2540,"width":980,"height":1905,"color":"6"},
		{"id":"4d3f7cf9310de67a","type":"text","text":"give me a template of the code that links battlenet accounts to ethereum wallets","x":10240,"y":3232,"width":280,"height":168},
		{"chat_role":"assistant","id":"b0a2cfb175a5da2c","type":"text","text":"Certainly! Here's a template of the code that demonstrates how to link Battle.net accounts to Ethereum wallets:\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract BattleNetAccountLinker {\n    // Mapping to store the association between Battle.net account and Ethereum wallet\n    mapping(address => bytes32) private battleNetAccounts;\n    \n    // Event to emit when a Battle.net account gets linked\n    event AccountLinked(address indexed wallet, bytes32 indexed battleNetAccount);\n    \n    // Function to associate a Battle.net account with a Ethereum wallet\n    function linkBattleNetAccount(bytes32 _battleNetAccount) external {\n        require(battleNetAccounts[msg.sender] == bytes32(0), \"Account already linked\");\n        \n        battleNetAccounts[msg.sender] = _battleNetAccount;\n        \n        emit AccountLinked(msg.sender, _battleNetAccount);\n    }\n    \n    // Function to retrieve the Battle.net account associated with a wallet\n    function getBattleNetAccount(address _wallet) external view returns (bytes32) {\n        return battleNetAccounts[_wallet];\n    }\n}\n```\n\nThis code demonstrates a basic contract, `BattleNetAccountLinker`, that allows users to link their Battle.net accounts with their Ethereum wallets. The `linkBattleNetAccount` function is used to associate a Battle.net account with the sender's Ethereum wallet address. The `getBattleNetAccount` function allows querying the Battle.net account associated with a given wallet address.\n\nYou can deploy this smart contract to the Ethereum network and interact with it using a web3 provider or an Ethereum development environment.","x":10750,"y":3493,"width":1200,"height":1500,"color":"6"},
		{"id":"b79faff73772aaf4","type":"text","text":"How to connect thiw with the merkle tree","x":10020,"y":4740,"width":250,"height":60},
		{"chat_role":"assistant","id":"8ce878b5e4906e06","type":"text","text":"To connect the code for linking Battle.net accounts to Ethereum wallets with a Merkle tree, you can modify the `BattleNetAccountLinker` contract to include a Merkle root and proof verification. Here's an updated version of the code template:\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract BattleNetAccountLinker {\n    bytes32 private merkleRoot;\n    \n    // Mapping to store the association between Battle.net account and Ethereum wallet\n    mapping(address => bytes32) private battleNetAccounts;\n    \n    // Event to emit when a Battle.net account gets linked\n    event AccountLinked(address indexed wallet, bytes32 indexed battleNetAccount);\n    \n    // Function to associate a Battle.net account with an Ethereum wallet\n    function linkBattleNetAccount(bytes32 _battleNetAccount) external {\n        require(battleNetAccounts[msg.sender] == bytes32(0), \"Account already linked\");\n        \n        battleNetAccounts[msg.sender] = _battleNetAccount;\n        \n        emit AccountLinked(msg.sender, _battleNetAccount);\n    }\n    \n    // Function to retrieve the Battle.net account associated with a wallet\n    function getBattleNetAccount(address _wallet) external view returns (bytes32) {\n        return battleNetAccounts[_wallet];\n    }\n    \n    // Set the Merkle root\n    function setMerkleRoot(bytes32 _merkleRoot) external {\n        merkleRoot = _merkleRoot;\n    }\n    \n    // Verify ownership through Merkle proof\n    function verifyOwnership(uint256 _index, bytes32[] calldata _proof, bytes32 _leaf) external view returns (bool) {\n        bytes32 node = _leaf;\n        \n        for (uint256 i = 0; i < _proof.length; i++) {\n            if (_index % 2 == 0) {\n                node = keccak256(abi.encodePacked(node, _proof[i]));\n            } else {\n                node = keccak256(abi.encodePacked(_proof[i], node));\n            }\n\n            _index = _index / 2;\n        }\n        \n        return node == merkleRoot;\n    }\n}\n```\n\nIn this updated code, the `BattleNetAccountLinker` contract includes a `merkleRoot` variable to store the Merkle root of the associated Merkle tree. The `setMerkleRoot` function allows setting the Merkle root value.\n\nThe new function `verifyOwnership` takes in the leaf node `_leaf`, its `_index` in the Merkle tree, and the `_proof` array, which contains the sibling nodes to prove the inclusion of the leaf in the Merkle tree. This function verifies the ownership of the Battle.net account by checking if the calculated Merkle node matches the stored Merkle root.\n\nWith this modification, you can now integrate a Merkle tree structure and use the `verifyOwnership` function to confirm the ownership of Battle.net accounts in relation to the Merkle root stored in the contract.","x":9690,"y":5040,"width":1060,"height":1081,"color":"6"}
	],
	"edges":[
		{"id":"Study Questions/New Questions/WOW NFT.md-Study Questions/Study Questions.md","fromNode":"Study Questions/New Questions/WOW NFT.md","fromSide":"right","toNode":"Study Questions/Study Questions.md","toSide":"left"},
		{"id":"Study Questions/New Questions/WOW NFT.md-Engrams/Engrams.md","fromNode":"Study Questions/New Questions/WOW NFT.md","fromSide":"right","toNode":"Engrams/Engrams.md","toSide":"left"},
		{"id":"Study Questions/New Questions/WOW NFT.md-Engrams/Data Cache/Neurons.md","fromNode":"Study Questions/New Questions/WOW NFT.md","fromSide":"right","toNode":"Engrams/Data Cache/Neurons.md","toSide":"left"},
		{"id":"Study Questions/New Questions/WOW NFT.md-Study Questions/New Questions/Data_WoW_Dump.md","fromNode":"Study Questions/New Questions/WOW NFT.md","fromSide":"right","toNode":"Study Questions/New Questions/Data_WoW_Dump.md","toSide":"left"},
		{"id":"Study Questions/New Questions/Data_WoW_Dump.md-Study Questions/New Questions/APIs WOW.md","fromNode":"Study Questions/New Questions/Data_WoW_Dump.md","fromSide":"right","toNode":"Study Questions/New Questions/APIs WOW.md","toSide":"left"},
		{"id":"Study Questions/New Questions/Data_WoW_Dump.md-Study Questions/New Questions/WOW DB sample.md","fromNode":"Study Questions/New Questions/Data_WoW_Dump.md","fromSide":"right","toNode":"Study Questions/New Questions/WOW DB sample.md","toSide":"left"},
		{"id":"Study Questions/New Questions/Data_WoW_Dump.md-Study Questions/New Questions/GitHub WOW.md","fromNode":"Study Questions/New Questions/Data_WoW_Dump.md","fromSide":"right","toNode":"Study Questions/New Questions/GitHub WOW.md","toSide":"left"},
		{"id":"Study Questions/New Questions/Data_WoW_Dump.md-Study Questions/New Questions/Basic Flow WOW.md","fromNode":"Study Questions/New Questions/Data_WoW_Dump.md","fromSide":"right","toNode":"Study Questions/New Questions/Basic Flow WOW.md","toSide":"left"},
		{"id":"Study Questions/New Questions/Data_WoW_Dump.md-Study Questions/New Questions/NFT traits WOW.md","fromNode":"Study Questions/New Questions/Data_WoW_Dump.md","fromSide":"right","toNode":"Study Questions/New Questions/NFT traits WOW.md","toSide":"left"},
		{"id":"94e8597cfe932d82","fromNode":"a143122821ab4bf5","fromSide":"bottom","toNode":"516cd9f31ce5c62e","toSide":"top"},
		{"id":"289cde7182ad2e1e","fromNode":"Study Questions/New Questions/WOW NFT.md","fromSide":"right","toNode":"a143122821ab4bf5","toSide":"top"},
		{"id":"4db704f5c7c639e2","fromNode":"a1544ca7d9802cfe","fromSide":"left","toNode":"516cd9f31ce5c62e","toSide":"top"},
		{"id":"7cbf4351e1e724c4","fromNode":"919cf8b4114f20b1","fromSide":"top","toNode":"516cd9f31ce5c62e","toSide":"top"},
		{"id":"1d48e18ec3ecd540","fromNode":"516cd9f31ce5c62e","fromSide":"bottom","toNode":"2172f7a7857d84b9","toSide":"top"},
		{"id":"053fa3ee94096c38","fromNode":"2172f7a7857d84b9","fromSide":"bottom","toNode":"b1936016869bfa9c","toSide":"top"},
		{"id":"817da907e3b8e7f3","fromNode":"92de50c977647546","fromSide":"bottom","toNode":"19d78b1be7c4a10b","toSide":"top"},
		{"id":"fe6f003c50bddf2c","fromNode":"19d78b1be7c4a10b","fromSide":"bottom","toNode":"bd1175bde8566fbb","toSide":"top"},
		{"id":"22d5152ac3990830","fromNode":"bd1175bde8566fbb","fromSide":"right","toNode":"f91f5b3c91521c12","toSide":"left"},
		{"id":"2e5c228a48e2ad4b","fromNode":"f91f5b3c91521c12","fromSide":"bottom","toNode":"f71a1fc689662401","toSide":"top"},
		{"id":"2d18c3eb494426f4","fromNode":"f71a1fc689662401","fromSide":"right","toNode":"a8af8d0c6ab5f3b1","toSide":"left"},
		{"id":"b27e04364acf3751","fromNode":"Study Questions/New Questions/WOW DB sample.md","fromSide":"right","toNode":"77ba1009f75d5239","toSide":"left"},
		{"id":"bab88de3c7ad0f4e","fromNode":"Study Questions/New Questions/GitHub WOW.md","fromSide":"right","toNode":"77ba1009f75d5239","toSide":"left"},
		{"id":"f5371f200ac5096c","fromNode":"Study Questions/New Questions/Basic Flow WOW.md","fromSide":"right","toNode":"77ba1009f75d5239","toSide":"left"},
		{"id":"0cf68f8ed4cd1e63","fromNode":"Study Questions/New Questions/NFT traits WOW.md","fromSide":"right","toNode":"77ba1009f75d5239","toSide":"left"},
		{"id":"8a3fad35b727abaa","fromNode":"77ba1009f75d5239","fromSide":"bottom","toNode":"58c26354130329a7","toSide":"top"},
		{"id":"211eca467cdc333a","fromNode":"58c26354130329a7","fromSide":"bottom","toNode":"ff7997c60fe88ff4","toSide":"top"},
		{"id":"931f0ebab619aa53","fromNode":"ff7997c60fe88ff4","fromSide":"right","toNode":"47b5cb28af6dca60","toSide":"left"},
		{"id":"229ac0515db4a6e3","fromNode":"120fe70212a19a18","fromSide":"left","toNode":"2dae55d8bc2ac239","toSide":"top"},
		{"id":"173eea97a7fb490e","fromNode":"2dae55d8bc2ac239","fromSide":"bottom","toNode":"c037a4595ee1c2c1","toSide":"top"},
		{"id":"6dfb0df451a2ba50","fromNode":"47b5cb28af6dca60","fromSide":"right","toNode":"0c9aaa6347615a67","toSide":"top"},
		{"id":"481839157a432fa5","fromNode":"0c9aaa6347615a67","fromSide":"right","toNode":"836d21e2fed54bc0","toSide":"left"},
		{"id":"6e2bbe89faa78569","fromNode":"836d21e2fed54bc0","fromSide":"bottom","toNode":"a1b1f6ae479dbdd4","toSide":"top"},
		{"id":"dec074659cc6d91a","fromNode":"a1b1f6ae479dbdd4","fromSide":"bottom","toNode":"d07e2a7ce5f073db","toSide":"top"},
		{"id":"601b4046bc82e89e","fromNode":"d07e2a7ce5f073db","fromSide":"bottom","toNode":"e21cee13b46ae6ae","toSide":"top"},
		{"id":"6b9e433684fd2638","fromNode":"a8af8d0c6ab5f3b1","fromSide":"right","toNode":"da380728756f9bfd","toSide":"top"},
		{"id":"f5eee22031d263f7","fromNode":"e21cee13b46ae6ae","fromSide":"right","toNode":"da13df010ec23793","toSide":"left"},
		{"id":"d9d1a54827b010ba","fromNode":"da13df010ec23793","fromSide":"bottom","toNode":"1e385c6be980e9f6","toSide":"top"},
		{"id":"4381485bbca1457f","fromNode":"1e385c6be980e9f6","fromSide":"right","toNode":"191503087c98405c","toSide":"left"},
		{"id":"bb89387cb2837ef2","fromNode":"191503087c98405c","fromSide":"bottom","toNode":"09a088c6321b5a24","toSide":"top"},
		{"id":"3a803313ef3466c9","fromNode":"09a088c6321b5a24","fromSide":"right","toNode":"4d3f7cf9310de67a","toSide":"left"},
		{"id":"43adbe7169956ff1","fromNode":"4d3f7cf9310de67a","fromSide":"bottom","toNode":"b0a2cfb175a5da2c","toSide":"top"},
		{"id":"d43a774772b95bd2","fromNode":"b0a2cfb175a5da2c","fromSide":"bottom","toNode":"b79faff73772aaf4","toSide":"top"},
		{"id":"21515f6ecb2f4ed1","fromNode":"b79faff73772aaf4","fromSide":"bottom","toNode":"8ce878b5e4906e06","toSide":"top"}
	]
}