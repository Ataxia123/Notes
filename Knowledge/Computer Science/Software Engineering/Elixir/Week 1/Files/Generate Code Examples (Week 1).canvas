{
	"nodes":[
		{"type":"group","id":"ef7005b7d3a943a8","x":-4960,"y":-4240,"width":3540,"height":4740,"label":"Untitled group"},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/1. Table of Contents.md","id":"1acefa5bf3aaa145","x":-440,"y":-540,"width":400,"height":400},
		{"type":"text","text":"Can you make examples using my knowledge to create complete and functional programs? They need to be less than 10 lines and demonstrate core concepts. Can you also write a short description about what each one does and include code comments when useful.\n\nDo not include references to Elixir code that isn't covered in the lesson plan.","id":"05f3a0f78137066a","x":80,"y":-460,"width":500,"height":234},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/1. Table of Contents.md","id":"713a31ce0adbdcf8","x":-3940,"y":-2120,"width":500,"height":500,"color":"1"},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/2. Introduction To Elixir.md","id":"59eedf9712fac280","x":-2940,"y":-4220,"width":500,"height":500},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/3. Data Types.md","id":"a6e3cdfb3865425d","x":-2940,"y":-2720,"width":500,"height":500},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/4. Control Structures.md","id":"e55871ea93928c42","x":-2940,"y":-1220,"width":500,"height":500},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/Files/Strings.md","id":"1b5357b11ab2e424","x":-1940,"y":-3620,"width":500,"height":500},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/5. Modules.md","id":"17de7371a61bba83","x":-2940,"y":-620,"width":500,"height":500},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/6. Basic Syntax Examples.md","id":"6408b7cdca8e54f3","x":-2940,"y":-20,"width":500,"height":500},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir 101.md","id":"fe6ec907b226a6cb","x":-4940,"y":-2120,"width":500,"height":500},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/Files/Enums.md","id":"d857f79a408d0581","x":-1940,"y":-3020,"width":500,"height":500},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/Files/Collections.md","id":"ecb750eeb3262fbd","x":-1940,"y":-2420,"width":500,"height":500},
		{"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/Files/DateTime & NaiveDateTime.md","id":"fdb7cddc59322d8d","x":-1940,"y":-1820,"width":500,"height":500},
		{"id":"5fff6d6b336318ef","x":-1440,"y":720,"width":1080,"height":1200,"type":"file","file":"Knowledge/Computer Science/Software Engineering/Elixir/Week 1/Files/Elixir_Knowledge_Example.md"},
		{"chat_role":"assistant","type":"text","text":"Certainly! Here are some examples of complete and functional programs that illustrate core concepts in Elixir:\n\n### Example 1: Calculate Factorial\n```elixir\n# This program calculates the factorial of a given number using recursion\n\ndefmodule Factorial do\n  def calculate(0), do: 1\n  def calculate(n), do: n * calculate(n - 1)\nend\n\nIO.puts Factorial.calculate(5) # Output: 120\n```\n\nThis example demonstrates the use of pattern matching and recursion to calculate the factorial of a number.\n\n### Example 2: Capitalize Names\n```elixir\n# This program capitalizes the names in a list of strings using Enum.map\n\nnames = [\"john\", \"alice\", \"bob\"]\n\ncapitalized_names = Enum.map(names, &String.capitalize/1)\n\nIO.inspect capitalized_names\n```\n\nThis example demonstrates the use of the `Enum.map` function to capitalize the names in a list of strings.\n\n### Example 3: Filter Even Numbers\n```elixir\n# This program filters out even numbers from a list using Enum.filter\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\neven_numbers = Enum.filter(numbers, fn n -> rem(n, 2) == 0 end)\n\nIO.inspect even_numbers\n```\n\nThis example demonstrates the use of the `Enum.filter` function to select even numbers from a list.\n\n### Example 4: Sum of Squares\n```elixir\n# This program calculates the sum of squares of numbers in a list using Enum.reduce\n\nnumbers = [1, 2, 3, 4, 5]\n\nsum_of_squares = Enum.reduce(numbers, 0, fn n, acc -> acc + n*n end)\n\nIO.puts sum_of_squares # Output: 55\n```\n\nThis example demonstrates the use of the `Enum.reduce` function to calculate the sum of squares of numbers in a list.\n\n### Example 5: Reverse String\n```elixir\n# This program reverses a string using the :lists.reverse function\n\nstring = \"Hello, World!\"\n\nreversed_string = :lists.reverse(string)\n\nIO.puts reversed_string # Output: \"!dlroW ,olleH\"\n```\n\nThis example demonstrates the use of the `:lists.reverse` function to reverse a string.\n\nThese examples showcase various core concepts in Elixir, such as recursion, higher-order functions, pattern matching, and list manipulation. They are kept within 10 lines and provide a practical demonstration of each concept.","id":"3dd9fa10dd839af0","x":-360,"y":720,"width":1160,"height":1600,"color":"6"}
	],
	"edges":[
		{"id":"2eb604732df6ffb6","fromNode":"1acefa5bf3aaa145","fromSide":"right","toNode":"05f3a0f78137066a","toSide":"left"},
		{"id":"57037e3ed47cfe65","fromNode":"05f3a0f78137066a","fromSide":"bottom","toNode":"5fff6d6b336318ef","toSide":"top"},
		{"id":"aae128ca5dd20b1d","fromNode":"713a31ce0adbdcf8","fromSide":"right","toNode":"59eedf9712fac280","toSide":"left"},
		{"id":"53fa866b167d84f0","fromNode":"713a31ce0adbdcf8","fromSide":"right","toNode":"a6e3cdfb3865425d","toSide":"left"},
		{"id":"5565f990ea205715","fromNode":"713a31ce0adbdcf8","fromSide":"right","toNode":"e55871ea93928c42","toSide":"left"},
		{"id":"b0dc059f522706e7","fromNode":"713a31ce0adbdcf8","fromSide":"right","toNode":"17de7371a61bba83","toSide":"left"},
		{"id":"51e884b9b26cd43a","fromNode":"713a31ce0adbdcf8","fromSide":"right","toNode":"6408b7cdca8e54f3","toSide":"left"},
		{"id":"ad4b4f796f54915f","fromNode":"fe6ec907b226a6cb","fromSide":"right","toNode":"713a31ce0adbdcf8","toSide":"left"},
		{"id":"f04a09ea15431cec","fromNode":"a6e3cdfb3865425d","fromSide":"right","toNode":"1b5357b11ab2e424","toSide":"left"},
		{"id":"8e7d1668a801cb28","fromNode":"a6e3cdfb3865425d","fromSide":"right","toNode":"d857f79a408d0581","toSide":"left"},
		{"id":"d119944f02b4f542","fromNode":"a6e3cdfb3865425d","fromSide":"right","toNode":"ecb750eeb3262fbd","toSide":"left"},
		{"id":"ae309f15cf7200e3","fromNode":"a6e3cdfb3865425d","fromSide":"right","toNode":"fdb7cddc59322d8d","toSide":"left"},
		{"id":"570908fbcfc22c11","fromNode":"ecb750eeb3262fbd","fromSide":"right","toNode":"1acefa5bf3aaa145","toSide":"left"},
		{"id":"0d2e2830dac3e750","fromNode":"6408b7cdca8e54f3","fromSide":"right","toNode":"1acefa5bf3aaa145","toSide":"left"},
		{"id":"ebf6507ce08b5965","fromNode":"17de7371a61bba83","fromSide":"right","toNode":"1acefa5bf3aaa145","toSide":"left"},
		{"id":"c086425b75f8f379","fromNode":"e55871ea93928c42","fromSide":"right","toNode":"1acefa5bf3aaa145","toSide":"left"},
		{"id":"0e3eb67446a8e099","fromNode":"fdb7cddc59322d8d","fromSide":"right","toNode":"1acefa5bf3aaa145","toSide":"top"},
		{"id":"24a7c3b73998492f","fromNode":"ecb750eeb3262fbd","fromSide":"right","toNode":"1acefa5bf3aaa145","toSide":"top"},
		{"id":"3395f7313bef3909","fromNode":"d857f79a408d0581","fromSide":"right","toNode":"1acefa5bf3aaa145","toSide":"top"},
		{"id":"88dad1e128142756","fromNode":"1b5357b11ab2e424","fromSide":"right","toNode":"1acefa5bf3aaa145","toSide":"top"},
		{"id":"99602cc80f305e85","fromNode":"59eedf9712fac280","fromSide":"right","toNode":"1acefa5bf3aaa145","toSide":"top"},
		{"id":"ffbc9104a186b488","fromNode":"05f3a0f78137066a","fromSide":"bottom","toNode":"3dd9fa10dd839af0","toSide":"top"}
	]
}